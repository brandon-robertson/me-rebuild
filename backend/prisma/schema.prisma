generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int      @id @default(autoincrement())
  username String   @unique
  password String
  admin    Boolean  @default(false)
  players  Player[]
}

model Player {
  id           Int     @id @default(autoincrement())
  userId       Int
  race         String
  credits      Int     @default(0)
  shipId       Int?
  currentSystemId Int?
  user         User    @relation(fields: [userId], references: [id])
  ship         Ship?   @relation(fields: [shipId], references: [id])
  currentSystem System? @relation("PlayerCurrentSystem", fields: [currentSystemId], references: [id])
}

model Race {
  id      Int      @id @default(autoincrement())
  name    String
  ships   Ship[]
  weapons Weapon[]
  goods   Good[]   // Add this line for opposite relation
}

model Rank {
  id    Int    @id @default(autoincrement())
  name  String
  ships Ship[]
}

model System {
  id          Int      @id @default(autoincrement())
  name        String
  coordsX     Int
  coordsY     Int
  raceType    String?
  ports       Port[]
  playersHere Player[] @relation("PlayerCurrentSystem")
}

model Port {
  id            Int    @id @default(autoincrement())
  systemId      Int
  goodsAvailable Json?  // JSON for goods list/prices
  upgradeLevel  Int    @default(0)
  system        System @relation(fields: [systemId], references: [id])
}

model Good {
  id            Int      @id @default(autoincrement())
  name          String   // caption
  level         Int      @default(1)
  raceId        Int?
  tech          Int      @default(0)
  type          Int      @default(0)
  race          Race?    @relation(fields: [raceId], references: [id])
  weapons       Weapon[] @relation("WeaponGood")
  ammunitions   Weapon[] @relation("WeaponAmmunition")
}

model Ship {
  id            Int     @id @default(autoincrement())
  name          String? // caption
  raceId        Int
  rankId        Int     @default(1)
  cargoSpace    Int     @default(100) // holds
  shields       Int     @default(100)
  armor         Int     @default(100)
  accel         Float   @default(1.0) // tps
  cost          Int     @default(1000000) // price
  weaponsSlots  Int     @default(0) // racks
  shieldsSlots  Int     @default(0) // stations
  recharge      Int     @default(1)
  race          Race    @relation(fields: [raceId], references: [id])
  rank          Rank    @relation(fields: [rankId], references: [id])
  players       Player[]
}

model Weapon {
  id            Int     @id @default(autoincrement())
  name          String  // caption
  goodId        Int     @default(0)
  raceId        Int?
  racks         Int     @default(0)
  stations      Int     @default(0)
  accuracy      Float   @default(1.00)
  volley        Int     @default(1)
  ammunitionId  Int?
  generalDamage Int     @default(0)
  shieldDamage  Int     @default(0)
  armorDamage   Int     @default(0)
  good          Good    @relation("WeaponGood", fields: [goodId], references: [id])
  race          Race?   @relation(fields: [raceId], references: [id])
  ammunition    Good?   @relation("WeaponAmmunition", fields: [ammunitionId], references: [id])
}